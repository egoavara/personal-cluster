"use strict";
// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkloadGroupPatch = exports.WorkloadGroupList = exports.WorkloadGroup = exports.WorkloadEntryPatch = exports.WorkloadEntryList = exports.WorkloadEntry = exports.VirtualServicePatch = exports.VirtualServiceList = exports.VirtualService = exports.SidecarPatch = exports.SidecarList = exports.Sidecar = exports.ServiceEntryPatch = exports.ServiceEntryList = exports.ServiceEntry = exports.GatewayPatch = exports.GatewayList = exports.Gateway = exports.EnvoyFilterPatch = exports.EnvoyFilterList = exports.EnvoyFilter = exports.DestinationRulePatch = exports.DestinationRuleList = exports.DestinationRule = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
exports.DestinationRule = null;
utilities.lazyLoad(exports, ["DestinationRule"], () => require("./destinationRule"));
exports.DestinationRuleList = null;
utilities.lazyLoad(exports, ["DestinationRuleList"], () => require("./destinationRuleList"));
exports.DestinationRulePatch = null;
utilities.lazyLoad(exports, ["DestinationRulePatch"], () => require("./destinationRulePatch"));
exports.EnvoyFilter = null;
utilities.lazyLoad(exports, ["EnvoyFilter"], () => require("./envoyFilter"));
exports.EnvoyFilterList = null;
utilities.lazyLoad(exports, ["EnvoyFilterList"], () => require("./envoyFilterList"));
exports.EnvoyFilterPatch = null;
utilities.lazyLoad(exports, ["EnvoyFilterPatch"], () => require("./envoyFilterPatch"));
exports.Gateway = null;
utilities.lazyLoad(exports, ["Gateway"], () => require("./gateway"));
exports.GatewayList = null;
utilities.lazyLoad(exports, ["GatewayList"], () => require("./gatewayList"));
exports.GatewayPatch = null;
utilities.lazyLoad(exports, ["GatewayPatch"], () => require("./gatewayPatch"));
exports.ServiceEntry = null;
utilities.lazyLoad(exports, ["ServiceEntry"], () => require("./serviceEntry"));
exports.ServiceEntryList = null;
utilities.lazyLoad(exports, ["ServiceEntryList"], () => require("./serviceEntryList"));
exports.ServiceEntryPatch = null;
utilities.lazyLoad(exports, ["ServiceEntryPatch"], () => require("./serviceEntryPatch"));
exports.Sidecar = null;
utilities.lazyLoad(exports, ["Sidecar"], () => require("./sidecar"));
exports.SidecarList = null;
utilities.lazyLoad(exports, ["SidecarList"], () => require("./sidecarList"));
exports.SidecarPatch = null;
utilities.lazyLoad(exports, ["SidecarPatch"], () => require("./sidecarPatch"));
exports.VirtualService = null;
utilities.lazyLoad(exports, ["VirtualService"], () => require("./virtualService"));
exports.VirtualServiceList = null;
utilities.lazyLoad(exports, ["VirtualServiceList"], () => require("./virtualServiceList"));
exports.VirtualServicePatch = null;
utilities.lazyLoad(exports, ["VirtualServicePatch"], () => require("./virtualServicePatch"));
exports.WorkloadEntry = null;
utilities.lazyLoad(exports, ["WorkloadEntry"], () => require("./workloadEntry"));
exports.WorkloadEntryList = null;
utilities.lazyLoad(exports, ["WorkloadEntryList"], () => require("./workloadEntryList"));
exports.WorkloadEntryPatch = null;
utilities.lazyLoad(exports, ["WorkloadEntryPatch"], () => require("./workloadEntryPatch"));
exports.WorkloadGroup = null;
utilities.lazyLoad(exports, ["WorkloadGroup"], () => require("./workloadGroup"));
exports.WorkloadGroupList = null;
utilities.lazyLoad(exports, ["WorkloadGroupList"], () => require("./workloadGroupList"));
exports.WorkloadGroupPatch = null;
utilities.lazyLoad(exports, ["WorkloadGroupPatch"], () => require("./workloadGroupPatch"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "kubernetes:networking.istio.io/v1alpha3:DestinationRule":
                return new exports.DestinationRule(name, undefined, { urn });
            case "kubernetes:networking.istio.io/v1alpha3:DestinationRuleList":
                return new exports.DestinationRuleList(name, undefined, { urn });
            case "kubernetes:networking.istio.io/v1alpha3:DestinationRulePatch":
                return new exports.DestinationRulePatch(name, undefined, { urn });
            case "kubernetes:networking.istio.io/v1alpha3:EnvoyFilter":
                return new exports.EnvoyFilter(name, undefined, { urn });
            case "kubernetes:networking.istio.io/v1alpha3:EnvoyFilterList":
                return new exports.EnvoyFilterList(name, undefined, { urn });
            case "kubernetes:networking.istio.io/v1alpha3:EnvoyFilterPatch":
                return new exports.EnvoyFilterPatch(name, undefined, { urn });
            case "kubernetes:networking.istio.io/v1alpha3:Gateway":
                return new exports.Gateway(name, undefined, { urn });
            case "kubernetes:networking.istio.io/v1alpha3:GatewayList":
                return new exports.GatewayList(name, undefined, { urn });
            case "kubernetes:networking.istio.io/v1alpha3:GatewayPatch":
                return new exports.GatewayPatch(name, undefined, { urn });
            case "kubernetes:networking.istio.io/v1alpha3:ServiceEntry":
                return new exports.ServiceEntry(name, undefined, { urn });
            case "kubernetes:networking.istio.io/v1alpha3:ServiceEntryList":
                return new exports.ServiceEntryList(name, undefined, { urn });
            case "kubernetes:networking.istio.io/v1alpha3:ServiceEntryPatch":
                return new exports.ServiceEntryPatch(name, undefined, { urn });
            case "kubernetes:networking.istio.io/v1alpha3:Sidecar":
                return new exports.Sidecar(name, undefined, { urn });
            case "kubernetes:networking.istio.io/v1alpha3:SidecarList":
                return new exports.SidecarList(name, undefined, { urn });
            case "kubernetes:networking.istio.io/v1alpha3:SidecarPatch":
                return new exports.SidecarPatch(name, undefined, { urn });
            case "kubernetes:networking.istio.io/v1alpha3:VirtualService":
                return new exports.VirtualService(name, undefined, { urn });
            case "kubernetes:networking.istio.io/v1alpha3:VirtualServiceList":
                return new exports.VirtualServiceList(name, undefined, { urn });
            case "kubernetes:networking.istio.io/v1alpha3:VirtualServicePatch":
                return new exports.VirtualServicePatch(name, undefined, { urn });
            case "kubernetes:networking.istio.io/v1alpha3:WorkloadEntry":
                return new exports.WorkloadEntry(name, undefined, { urn });
            case "kubernetes:networking.istio.io/v1alpha3:WorkloadEntryList":
                return new exports.WorkloadEntryList(name, undefined, { urn });
            case "kubernetes:networking.istio.io/v1alpha3:WorkloadEntryPatch":
                return new exports.WorkloadEntryPatch(name, undefined, { urn });
            case "kubernetes:networking.istio.io/v1alpha3:WorkloadGroup":
                return new exports.WorkloadGroup(name, undefined, { urn });
            case "kubernetes:networking.istio.io/v1alpha3:WorkloadGroupList":
                return new exports.WorkloadGroupList(name, undefined, { urn });
            case "kubernetes:networking.istio.io/v1alpha3:WorkloadGroupPatch":
                return new exports.WorkloadGroupPatch(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("crds", "networking.istio.io/v1alpha3", _module);
//# sourceMappingURL=index.js.map
"use strict";
// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.OrderPatch = exports.OrderList = exports.Order = exports.ChallengePatch = exports.ChallengeList = exports.Challenge = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
exports.Challenge = null;
utilities.lazyLoad(exports, ["Challenge"], () => require("./challenge"));
exports.ChallengeList = null;
utilities.lazyLoad(exports, ["ChallengeList"], () => require("./challengeList"));
exports.ChallengePatch = null;
utilities.lazyLoad(exports, ["ChallengePatch"], () => require("./challengePatch"));
exports.Order = null;
utilities.lazyLoad(exports, ["Order"], () => require("./order"));
exports.OrderList = null;
utilities.lazyLoad(exports, ["OrderList"], () => require("./orderList"));
exports.OrderPatch = null;
utilities.lazyLoad(exports, ["OrderPatch"], () => require("./orderPatch"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "kubernetes:acme.cert-manager.io/v1:Challenge":
                return new exports.Challenge(name, undefined, { urn });
            case "kubernetes:acme.cert-manager.io/v1:ChallengeList":
                return new exports.ChallengeList(name, undefined, { urn });
            case "kubernetes:acme.cert-manager.io/v1:ChallengePatch":
                return new exports.ChallengePatch(name, undefined, { urn });
            case "kubernetes:acme.cert-manager.io/v1:Order":
                return new exports.Order(name, undefined, { urn });
            case "kubernetes:acme.cert-manager.io/v1:OrderList":
                return new exports.OrderList(name, undefined, { urn });
            case "kubernetes:acme.cert-manager.io/v1:OrderPatch":
                return new exports.OrderPatch(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("certmanager", "acme.cert-manager.io/v1", _module);
//# sourceMappingURL=index.js.map
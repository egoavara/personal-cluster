"use strict";
// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ApmServerPatch = exports.ApmServerList = exports.ApmServer = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
exports.ApmServer = null;
utilities.lazyLoad(exports, ["ApmServer"], () => require("./apmServer"));
exports.ApmServerList = null;
utilities.lazyLoad(exports, ["ApmServerList"], () => require("./apmServerList"));
exports.ApmServerPatch = null;
utilities.lazyLoad(exports, ["ApmServerPatch"], () => require("./apmServerPatch"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "kubernetes:apm.k8s.elastic.co/v1beta1:ApmServer":
                return new exports.ApmServer(name, undefined, { urn });
            case "kubernetes:apm.k8s.elastic.co/v1beta1:ApmServerList":
                return new exports.ApmServerList(name, undefined, { urn });
            case "kubernetes:apm.k8s.elastic.co/v1beta1:ApmServerPatch":
                return new exports.ApmServerPatch(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("eck", "apm.k8s.elastic.co/v1beta1", _module);
//# sourceMappingURL=index.js.map
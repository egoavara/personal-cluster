"use strict";
// *** WARNING: this file was generated by crd2pulumi. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***
Object.defineProperty(exports, "__esModule", { value: true });
exports.ElasticsearchPatch = exports.ElasticsearchList = exports.Elasticsearch = void 0;
const pulumi = require("@pulumi/pulumi");
const utilities = require("../../utilities");
exports.Elasticsearch = null;
utilities.lazyLoad(exports, ["Elasticsearch"], () => require("./elasticsearch"));
exports.ElasticsearchList = null;
utilities.lazyLoad(exports, ["ElasticsearchList"], () => require("./elasticsearchList"));
exports.ElasticsearchPatch = null;
utilities.lazyLoad(exports, ["ElasticsearchPatch"], () => require("./elasticsearchPatch"));
const _module = {
    version: utilities.getVersion(),
    construct: (name, type, urn) => {
        switch (type) {
            case "kubernetes:elasticsearch.k8s.elastic.co/v1beta1:Elasticsearch":
                return new exports.Elasticsearch(name, undefined, { urn });
            case "kubernetes:elasticsearch.k8s.elastic.co/v1beta1:ElasticsearchList":
                return new exports.ElasticsearchList(name, undefined, { urn });
            case "kubernetes:elasticsearch.k8s.elastic.co/v1beta1:ElasticsearchPatch":
                return new exports.ElasticsearchPatch(name, undefined, { urn });
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("eck", "elasticsearch.k8s.elastic.co/v1beta1", _module);
//# sourceMappingURL=index.js.map